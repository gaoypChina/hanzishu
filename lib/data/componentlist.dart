import 'package:hanzishu/engine/component.dart';


var theComponentList = [
  Component(0, "aa", "撇", false, true, 1, 1, "nmdc", [4.0,0.6875,0.05,8.0,0.675,0.35,8.0,0.65,0.5,8.0,0.6125,0.6,8.0,0.55,0.7,8.0,0.45,0.8,8.0,0.25,0.92]),
  Component(1, "ab", "八", true, true, 1, 2, "nmdc", []),
  Component(2, "ac", "人", true, true, 1, 3, "nmdc", []),
  Component(3, "ad", "艾字底", false, true, 1, 4, "nmdc", [4.0,0.75,0.05,8.0,0.6,0.475,8.0,0.5,0.65,8.0,0.325,0.85,8.0,0.025,0.975,4.0,0.2,0.05,8.0,0.325,0.375,8.0,0.5,0.65,8.0,0.725,0.825,8.0,0.925,0.925]),
  Component(4, "ae", "周字框", false, true, 1, 5, "nmdc", [4.0,0.075,0.9375,8.0,0.1125,0.9,8.0,0.1625,0.8,8.0,0.2,0.65,8.0,0.2125,0.075,8.0,0.9,0.075,8.0,0.9,0.875,8.0,0.875,0.9,8.0,0.85,0.925,8.0,0.75,0.9875]),
  Component(5, "af", "竖", false, true, 2, 1, "nmdc", [4.0,0.5,0.0,8.0,0.5,1.0]),
  Component(6, "ag", "上三框", false, true, 2, 2, "nmdc", [4.0,0.125,0.7,8.0,0.125,0.4,8.0,0.875,0.4,8.0,0.875,0.7]),
  Component(7, "ah", "口", true, true, 2, 3, "nmdc", []),
  Component(8, "ai", "日", true, true, 2, 4, "nmdc", []),
  Component(90, "aj", "田", true, true, 2, 5, "nmdc", []),
  Component(10, "ak", "一", true, true, 3, 1, "nmdc", []),
  Component(11, "al", "二", true, true, 3, 2, "nmdc", []),
  Component(12, "am", "三", true, true, 3, 3, "nmdc", []),
  Component(13, "an", "七", true, true, 3, 4, "nmdc", []),
  Component(14, "ao", "十", true, true, 3, 5, "nmdc", []),
  Component(15, "ap", "点", false, true, 4, 1, "nmdc", [4.0,0.425,0.2,8.0,0.6,0.35]),
  Component(16, "aq", "丁", true, true, 4, 2, "nmdc", []),
  Component(17, "ar", "厂", true, true, 4, 3, "nmdc", []),
  Component(18, "as", "木", true, true, 4, 4, "nmdc", []),
  Component(19, "at", "乙", true, true, 5, 1, "nmdc", []),
  Component(20, "au", "刀", true, true, 5, 2, "nmdc", []),
  Component(21, "av", "弓", true, true, 5, 3, "nmdc", []),
  Component(22, "aw", "雪字底", false, true, 5, 4, "nmdc", [4.0,0.1625,0.475,8.0,0.825,0.475,8.0,0.825,0.8,4.0,0.2125,0.65,8.0,0.85,0.65,4.0,0.1625,0.7875,8.0,0.825,0.7875]),
  Component(23, "ax", "又", true, true, 6, 1, "nmdc", []),
  Component(24, "ay", "厶", false, true, 6, 2, "nmdc", [4.0,0.7,0.075,8.0,0.65,0.25,8.0,0.625,0.35,8.0,0.575,0.45,8.0,0.5375,0.55,8.0,0.5,0.65,8.0,0.45,0.725,8.0,0.375,0.825,8.0,0.85,0.725,4.0,0.725,0.4125,8.0,0.7625,0.55,8.0,0.8125,0.65,8.0,0.85,0.725,8.0,0.9,0.875]),
];

// TODO: To be created in run time.
// We call lead component just component, and other components expanded components.
var theLeadComponentList  = theComponentList;

var theComponentGroupList = [
  ComponentGroup(1, "breakout.png"),
  ComponentGroup(2, "characterlist.png"),
  ComponentGroup(3, "charactertree.png"),
  ComponentGroup(4, "conversations.png"),
  ComponentGroup(5, "quiz.png"),
  ComponentGroup(6, "charactertree.png"),
];

var theComponentInGroupList = [
  ComponentInGroup(0, 3, 3),
  ComponentInGroup(1, 3, 1),
  ComponentInGroup(2, 3, 4),
  ComponentInGroup(3, 3, 2),
  ComponentInGroup(4, 3, 5),
  ComponentInGroup(5, 2, 3),
  ComponentInGroup(6, 2, 4),
  ComponentInGroup(7, 2, 1),
  ComponentInGroup(8, 2, 5),
  ComponentInGroup(9, 2, 2),
  ComponentInGroup(10, 5, 2),
  ComponentInGroup(11, 5, 4),
  ComponentInGroup(12, 5, 1),
  ComponentInGroup(13, 5, 3),
  ComponentInGroup(14, 4, 3),
  ComponentInGroup(15, 4, 1),
  ComponentInGroup(16, 4, 4),
  ComponentInGroup(17, 4, 2),
  ComponentInGroup(18, 6, 2),
  ComponentInGroup(19, 6, 1),
  ComponentInGroup(20, 1, 3),
  ComponentInGroup(21, 1, 5),
  ComponentInGroup(22, 1, 4),
  ComponentInGroup(23, 1, 1),
  ComponentInGroup(24, 1, 2),
];

var theExpandedComponentList = [
  ComponentCollection(0, "breakout.png", 1, 1, "1st stroke"),
  ComponentCollection(1, "characterlist.png", 1, 2, "separate/go left and right"),
  ComponentCollection(2, "charactertree.png", 1, 3, "which common shape"),
  ComponentCollection(3, "conversations.png", 1, 4, "with significant diagonal crosses"),
  ComponentCollection(4, "quiz.png", 1, 5, "which common shape"),
  ComponentCollection(5, "charactertree.png", 2, 1, "1st stroke"),
  ComponentCollection(6, "breakout.png", 2, 2, "which common shape"),
  ComponentCollection(7, "characterlist.png", 2, 3, "vertical line(s) through a square"),
  ComponentCollection(8, "charactertree.png", 2, 4, "square with horizontal line(s)"),
  ComponentCollection(9, "conversations.png", 2, 5, "square with a cross"),
  ComponentCollection(10, "quiz.png", 3, 1, "1st stroke or number of horizontal lines"),
  ComponentCollection(11, "charactertree.png", 3, 2, "number of horizontal lines"),
  ComponentCollection(12, "characterlist.png", 3, 3, "number of horizontal lines"),
  ComponentCollection(13, "breakout.png", 3, 4, "with a line and a curve"),
  ComponentCollection(14, "conversations.png", 3, 5, "which common shape"),
  ComponentCollection(15, "breakout.png", 4, 1, "1st stroke"),
  ComponentCollection(16, "conversations.png", 4, 2, "overall looking of the shape"),
  ComponentCollection(17, "breakout.png", 4, 3, "overall looking of the shape"),
  ComponentCollection(18, "conversations.png", 4, 4, "which common shape"),
  ComponentCollection(19, "breakout.png", 5, 1, "1st stroke or turning strokes"),
  ComponentCollection(20, "conversations.png", 5, 2, "overall shape"),
  ComponentCollection(21, "breakout.png", 5, 3, "contains a stroke with a few turnings"),
  ComponentCollection(22, "conversations.png", 5, 4, "which common shape"),
  ComponentCollection(23, "breakout.png", 6, 1, "which common shape (with incomplete stroke)"),
  ComponentCollection(24, "conversations.png", 6, 2, "with twisted shape"),
];
